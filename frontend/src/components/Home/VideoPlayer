
  // Video player
  // const cldRef = useRef()
  // const videoRef = useRef()
  // useEffect(() => {
  //   if(cldRef.current) return;
  //   cldRef.current = window.clodinary;
  //   cldRef.current.videoPlayer(videoRef.current)

  // }, [])


  // https://cloudinary.com/blog/guest_post/autoplay-video-with-intersection-observer-in-nuxt-js

// expo
//       <template>
//       <div class="container">
//         <h2
//           class="flex justify-center items-center h-screen space-x-5 px-18 font-bold text-4xl"
//         >
//           Autoplay video with Intersection Observer in Nuxt.js
//         </h2>
    
//         <div class="flex justify-center items-center h-screen space-x-10">
//           <div class="rounded overflow-hidden shadow-lg mb-4 content-center">
//             <div class="px-6 py-4 pb-2">
//               <div class="pb-4 pt-8"></div>
    
//               <video
//                 id="video-player"
//                 controls
//                 width="800px"
//                 class="width-full"
//                 ref="theVideo"
//                 muted
//               ></video>
//             </div>
//           </div>
//         </div>
//       </div>
//     </template>
    
//     <script>
//     export default {
//      data() {
//         return {
//           cld: null,
//           player: null,
//           video: "/samples/animals/dancing-cat",
//         };
//       },
    
//       mounted() {
//         this.cld = cloudinary.Cloudinary.new({
//           cloud_name: process.env.NUXT_ENV_CLOUDINARY_CLOUD_NAME,
//           secure: true,
//         });
    
//         this.player = this.cld.videoPlayer("video-player", {
//           analytics: {
//             events: ["play", "pause"],
//           },
//         });
    
//         this.player.source(this.video);
    
//         this.onElementObserved();
//       },
//       name: "IndexPage",
//     };
//     </script>


//     export default {
//       data() {
//         //...
//       },
    
//       mounted() {
//          //...
    
//         this.onElementObserved();
//       },
    
//       methods: {
//         onElementObserved() {
//           const observer = new IntersectionObserver((entries) => {
//             entries.forEach((entry) => {
//               if (entry.intersectionRatio > 0) {
//                 this.player.play();
//               } else {
//                 this.player.pause();
//               }
//             });
//           });
//           observer.observe(this.$refs.theVideo);
//         },
//       },
    
//       name: "IndexPage",
//     };
//     </script>
